yanirelfassy
xelanos
                                         README for ex5: Directory Processor

==============================================================================================================
                                           =  Description  =
==============================================================================================================
This program is a flexible framework for working with files.
The program will filter the files in a given directory according to various conditions, and order the
filenames that passed the filtering according to various properties.

The Files in the Package:

1.  DirectoryProcessor.java:    The main class of the program, gets the arguments and running the whole manipulation
                                process.

2.  SectionAnalyzer.java:   This class is taking care of all the section analyzing during the program process.
                            It gets a section and checking it, creating manipulators by the section commands and also
                            validating the input is correct.

3. FirstException.java:     This exception thrown when there is a warning in the program. We made this class just to
                            have more readable code and for easy flow.

4. ManipulatorGenerator.java:   This class gets a command line and makes the manipulators requested. it validates the
                                data and using polymorphism makes the correct manipulator.

5. SecondException.java:    This exception thrown when there is an error with the format of the FLT file. we override
                            the get_message() method in order to print the message in the wanted template.

6. manipulators package:    This package includes all the filters and order types. each class in the package represents
                            a type of filter / order and does the wanted action.
                            All filters in package supports Javas File "filter" method.


==============================================================================================================
                                              =  Design  =
==============================================================================================================

We designed the package with a lot of modularity in mind:
    Firstly, all of the filters and orders classes are in a separate subpackage called  "Manipulators", said
    subpackage can be used with EVERY other program since all of its classes takes a File array, and does some
    manipulation on it (hence the name), and returns the manipulated array.
    In this subpackage, we have abstract classes for each type of filter and order such that if someone wants
    to add a filter or an order, all they have to do is extend the appropriate manipulator and write maybe
    one or two helper functions. We did this so the program would have more EXTENSIBILITY.
    Also since any program can use said manipulators, and all filters work with Javas File "filter" method,
    our code is also very REUSABLE.

    We used the factory design paradigm when translating lines of the commend file with the
    ManipulatorGenerator class, which is the only one who know


==============================================================================================================
                                       =  Implementation Issues  =
==============================================================================================================




==============================================================================================================
                                        =  Answers to Questions  =
==============================================================================================================


jar creating code :
jar -cvf ex5.jar README filesprocessing/*.java filesprocessing/manipulators/*.java