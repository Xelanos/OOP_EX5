yanirelfassy
xelanos
                                         README for ex5: Directory Processor

==============================================================================================================
                                           =  Description  =
==============================================================================================================
This program is a flexible framework for working with files.
The program will filter the files in a given directory according to various conditions, and order the
filenames that passed the filtering according to various properties.

The Files in the Package:

1.  DirectoryProcessor.java:    The main class of the program, gets the arguments and running the whole
                                manipulation process.

2.  SectionAnalyzer.java:   This class is taking care of all the section analyzing during the program process.
                            It gets a section and checking it, creating manipulators by the section commands
                            and also validating the input is correct.

3. FirstException.java:     This exception thrown when there is a warning in the program. We made this class just to
                            have more readable code and for easy flow.

4. ManipulatorGenerator.java:   This class gets a command line and makes the manipulators requested. it validates the
                                data and using polymorphism makes the correct manipulator.

5. SecondException.java:    This exception thrown when there is an error with the format of the FLT file. we override
                            the get_message() method in order to print the message in the wanted template.

6. manipulators package:    This package includes all the filters and order types. each class in the package represents
                            a type of filter / order and does the wanted action.


==============================================================================================================
                                              =  Design  =
==============================================================================================================

The whole process managed by the DirectoryProcessor class. This class is reading the file and separating it into
sections. We save the sections in an ArrayList because it's dynamic and we don't know how many sections we have in the
FLT file.
After separating the sections we check that they are in the correct format (no the commands format but the template).
Once all the sections are good, and we didn't get a SecondException that stops the program, we send the each section
to the SectionAnalyzer class. The class separate the command lines from the section and using the ManipulatorGenerator
gets the correct Manipulator with it's values.

All the manipulators are SubClass of the Manipulator class, so using Polymorphism we have no problem to "convert" each
manipulator into the correct Manipulator class.

After getting the manipulators we go one by one and do the manipulation on all the files.

In the program there are two types of exceptions. First we check if there is a SecondException, once it
occurs we stop the program. This exception is thrown only in one place, the SectionAnalyzer class, and we
catch it at the main method. This class override the getMessage method of the Exception class in order to
print everything in the correct format.
After we passed the SecondException check we continue with the process and check in every manipulator
creation if there is a FirstException. we catch this exception only at the getManipulators method at the
SectionAnalyzer class. this method also calculates the line number (more about it in the implementation
section). we made the FirsException class just of convenience reasons.





==============================================================================================================
                                       =  Implementation Issues  =
==============================================================================================================




==============================================================================================================
                                        =  Answers to Questions  =
==============================================================================================================